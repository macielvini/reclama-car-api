// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  EDITOR
  ADMIN

  @@map("role")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  image     String
  password  String
  role      Role      @default(USER) @map("role")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  Session   Session[]
  Review    Review[]

  @@map("users")
}

model Session {
  id        String   @id @default(uuid())
  token     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")

  @@map("sessions")
}

model Manufacture {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  name      String   @unique
  image     String
  Car       Car[]

  @@map("manufactures")
}

model Car {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @default(now()) @updatedAt @map("updated_at")
  image         String
  model         String
  engineSize    String
  year          Int
  fuelType      String
  manufacture   Manufacture @relation(fields: [manufactureId], references: [id])
  manufactureId String      @map("manufacture_id")
  Review        Review[]

  @@map("cars")
}

model Review {
  id            String          @id @default(uuid())
  title         String
  text          String
  maintenance   Int             @default(0)
  drivability   Int             @default(0)
  comfort       Int             @default(0)
  consumption   Int             @default(0)
  general       Int             @default(0)
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @default(now()) @updatedAt @map("updated_at")
  user          User            @relation(fields: [userId], references: [id])
  userId        String          @map("user_id")
  car           Car             @relation(fields: [carId], references: [id])
  carId         String          @map("car_id")
  TagsOnReviews TagsOnReviews[]

  @@map("reviews")
}

model TagsOnReviews {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  tag       Tag?     @relation(fields: [tagId], references: [id])
  tagId     String?  @map("tag_id")
  review    Review   @relation(fields: [reviewId], references: [id])
  reviewId  String   @map("review_id")

  @@index([tagId, reviewId])
  @@map("tags_on_reviews")
}

model Tag {
  id            String          @id @default(uuid())
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @default(now()) @updatedAt @map("updated_at")
  name          String
  color         String
  TagsOnReviews TagsOnReviews[]

  @@map("tags")
}
